https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1#

Given weights and values of N items, we need to put these items in a knapsack of capacity W to get the maximum total value in the knapsack.
Note: Unlike 0/1 knapsack, you are allowed to break the item. 

 

Example 1:

Input:
N = 3, W = 50
values[] = {60,100,120}
weight[] = {10,20,30}
Output:
240.00
Explanation:Total maximum value of item
we can have is 240.00 from the given
capacity of sack.


***********************************************************************************************************************************************

Time Complexity O(N*LogN)
Space O(1)


bool comparator(Item i1, Item i2)
{
    return (i1.value)/i1.weight > (i2.value)/i2.weight ;
}

double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        
        double profit=0;
        
        sort(arr,arr+n,comparator);
        
        for(int i=0;i<n;i++)
        {
            if(W>=arr[i].weight)
            {
                profit+=arr[i].value;
                W-=arr[i].weight;
            }
            else
            {
                profit+=arr[i].value * ((double) W / arr[i].weight);
                return profit;
                
            }
        }
}




