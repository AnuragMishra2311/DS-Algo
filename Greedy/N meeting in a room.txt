There is one meeting room in a firm. There are N meetings in the form of (S[i], F[i]) where S[i] is start time of meeting i and F[i] is finish time of meeting i.
What is the maximum number of meetings that can be accommodated in the meeting room when only one meeting can be held in the meeting room at a particular time? Also note start time of one chosen meeting can't be equal to the end time of the other chosen meeting.


Example 1:

Input:
N = 6
S[] = {1,3,0,5,8,5}
F[] = {2,4,6,7,9,9}
Output: 
4




**************************************************************************************************************************************************************************


def maximumMeetings(n,start,end):
    # code here
    ''' Sort the combined list according to ending time(ascending order) and then check 
    if start time of next meeting is greater than end time of present meeting, if yes increment
    the counter and update the last_ended_meeting as well.'''
    
    combined=[]
    for i in range(n):
        tup=(start[i],end[i])
        combined.append(tup)
        
    combined.sort(key=lambda x:x[1])
    #print(combined)
    count=1
    last_ended_meeting=combined[0][1]
    for i in range(1,n):
        if combined[i][0]>last_ended_meeting:
            last_ended_meeting=combined[i][1]
            #print(combined[i],combined[i-1])
            count+=1
    return count



**************************************************************************************************************************************************************************