Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.


Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Output: Because nums[0] + nums[1] == 9, we return [0, 1].


******************************************************************************************************************************************
def twoSum(self, nums: List[int], target: int) -> List[int]:
        
        dic={} # Dictionary with keys as elements and values as indexes
        answer=[]
        
        for i in range(len(nums)): # Iterating through entire list to create the dectionary
            dic[nums[i]]=i
        
        for i in range(len(nums)): # Iterating twice to find whether target-nums[i] exists in dictionary
            try:
                j=dic[target-nums[i]] #To avoid case of same index twice
                if j!=i:
                    answer.append(i)
                    answer.append(j)
                    break
            except:
                pass
        return answer
        
***************************************************************************************************************************************** 