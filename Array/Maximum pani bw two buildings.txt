Given an integer array which represents the heights of N buildings, the task is to delete N-2 buildings such that the water that can be trapped between the 
remaining two building is maximum. Please note that the total water trapped between two buildings is gap between them (number of buildings removed) multiplied 
by height of the smaller building.

Input: arr[] = {1, 3, 4} 
Output: 1 
We have to calculate the maximum water that can be stored between any 2 buildings. 
Water between the buildings of height 1 and height 3 = 0. 
Water between the buildings of height 1 and height 4 = 1. 
Water between the buildings of height 3 and height 4 = 0. 
Hence maximum of all the cases is 1.

Input: arr[] = {2, 1, 3, 4, 6, 5} 
Output: 8 
We remove the middle 4 buildings and get the total water stored as 2 * 4 = 8  


*************************************************************************************************************************************************************************

int maximum_water(int arr[],int n)
{
    int maximum=0,i=0,j=n-1;
    while(j>i)
    {
        maximum=max(min(arr[i],arr[j])*(j-i-1),maximum);
        if(arr[i]>arr[j])
        {
            j--;
        }
        
        else if(arr[j]>arr[i])
        {
            i++;
        }
        
        else
        {
            i++;
            j--;
        }
        
    }
    return maximum;
}

*************************************************************************************************************************************************************************
