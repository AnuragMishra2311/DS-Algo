Given an array of size N and a range [a, b]. The task is to partition the array around the range such that array is divided into three parts.
1) All elements smaller than a come first.
2) All elements in range a to b come next.
3) All elements greater than b appear in the end.
The individual elements of three sets can appear in any order. You are required to return the modified array.



*************************************************************************************************************************************************************************
void threeWayPartition(vector<int>& array,int a, int b)
{
        // code here 
        int start=0,n=array.size(),end=n-1,i=0;
        while(i<=end)
        {
            if(array[i]<a){
                swap(array[i],array[start]);
                i++;
                start++;
            }
            
            else 
            if(array[i]>b){
                swap(array[i],array[end]);
                end--;
            }
            
            else{
                i++;
            }
        }
}


*************************************************************************************************************************************************************************