1. Reverse LL
2. Add 1
3. Reverse Again



Node* reverse(Node *head){
    Node *prev=NULL,*next=NULL;
    while(head){
        next=head->next;
        head->next=prev;
        prev=head;
        head=next;
        }
    return prev;
    }
    

Node* addOne(Node *head) 
    {
        // Your Code here
        // return head of list after adding one
        
        Node *reverse_head,*prev=NULL,*temp,*newptr;
        bool carry=true;
        reverse_head=reverse(head);
        temp=reverse_head;
        
        while(reverse_head){
            if(reverse_head->data==9){
                reverse_head->data=0;
                carry=true;
            }
            else{
                reverse_head->data=reverse_head->data+1;
                carry=false;
                break;
            }
            prev=reverse_head;
            reverse_head=reverse_head->next;
        }
        if(carry){
            newptr=new Node(1);
            prev->next=newptr;
        }
        
        head=reverse(temp);
        return head;
        
            
    }