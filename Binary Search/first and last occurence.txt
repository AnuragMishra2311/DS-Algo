int first(int arr[],int x,int low,int high){
    int mid=(low+high)/2;
    if(low>high){
        return -1;
    }
    else if(arr[mid]>x){
        first(arr,x,low,mid-1);
    }
    else if(arr[mid]<x){
        first(arr,x,mid+1,high);
    }
    else{
        if(mid==0||arr[mid-1]!=x){
            return mid;
        }
        else{
            first(arr,x,low,mid-1);
        }
    }
}



int last(int arr[],int x,int low,int high,int n){
    int mid=(low+high)/2;
    if(low>high){
        return -1;
    }
    else if(arr[mid]>x){
        last(arr,x,low,mid-1,n);
    }
    else if(arr[mid]<x){
        last(arr,x,mid+1,high,n);
    }
    else{
        if(mid==n-1 || arr[mid+1]!=x){
                return mid;
        }
        else{
            last(arr,x,mid+1,high,n);
            }
        }
}


int count(int arr[], int n, int x) {
	// code here
	int f,l;
	f=first(arr,x,0,n-1);
	l=last(arr,x,0,n-1,n);
	if(f==-1 && l==-1)
	    return 0; //not found
	return l-f+1;
}