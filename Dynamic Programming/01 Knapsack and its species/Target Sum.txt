https://leetcode.com/problems/target-sum/



Why special treatment to 0 ?

you can give any sign to 0 no matter 1+0 or 1-0 both are same so they will not be counted in Top down approach .
for example we have array [0,0,1] and target sum is 1. first we will check with non zeros that is only 1 now check with 0s. 
you can see 
+0+0+1,
+0-0+1,
-0-0+1,-0+0+1 
Number of cases are pow(2,number of 0's).



**********************************************************************************************************************************************************

int findTargetSumWays(vector<int>& nums, int target) {
     int sum=0;
            int countZeros=0;
            int n=nums.size();
            for(int x:nums){
                    sum+=x;
                    if(x==0){
                            countZeros++;
                    }
            }
           if(sum<target ){return 0;}
            sum=sum+target;
            if(sum%2!=0){
                    return 0;
            }
            sum=sum/2;
            cout<<sum;
            int dp[n+1][sum+1];
            for(int i=0;i<n+1;i++){
                    for(int j=0;j<sum+1;j++){
                            if(i==0){
                                    dp[i][j]=0;
                            }
                            if(j==0){
                                    dp[i][j]=1;
                            }
                    }
            }
            for(int i=1;i<n+1;i++){
                    for(int j=1;j<sum+1;j++){
                            if(nums[i-1]>j or nums[i-1]==0){//exclude zeros and count it in different way
                                    dp[i][j]=dp[i-1][j];
                                   
                            }
                            else if(nums[i-1]<=j ){
                                  dp[i][j]=dp[i-1][j-nums[i-1]]+dp[i-1][j];   
                            }
                    }
            }
            int m=dp[n][sum];
            int zeros=pow(2,countZeros);//here we are taking zeros
            return m*zeros;
    }
