https://practice.geeksforgeeks.org/problems/perfect-sum-problem5633/1


Given an array arr[] of integers and an integer sum, the task is to count all subsets of the given array with a sum equal to a given sum.

Note: Answer can be very large, so, output answer modulo 109+7

Example 1:

Input: N = 6, arr[] = {2, 3, 5, 6, 8, 10}
       sum = 10
Output: 3
Explanation: {2, 3, 5}, {2, 8}, {10}



****************************************************************************************************************************************************

int perfectSum(int arr[], int n, int sum)
	{
        // Your code goes here
        int dp[n+1][sum+1],i,j,modulo=pow(10,9)+7;
        
        for(i=0;i<n+1;i++)
        {
            for(j=0;j<sum+1;j++)
            {
                if(i==0)
                {
                    dp[i][j]=0;
                }
                if(j==0)
                {
                    dp[i][j]=1;
                }
            }
        }
        
        for(i=1;i<n+1;i++)
        {
            for(j=1;j<sum+1;j++)
            {
                if(arr[i-1]>j)
                {
                    dp[i][j]=(dp[i-1][j])%(modulo);
                }
                else
		{
                    dp[i][j]=  (dp[i-1][j-arr[i-1]] )% (modulo) + (dp[i-1][j] ) % (modulo);  //Note the + instead of OR in subset problem
                }
            }
        }
        return (dp[n][sum]) % modulo;
	}

