Given two binary trees, the task is to find if both of them are identical or not. 


Example 2:

Input:
     1          1
   /   \      /   \
  2     3    2     3
Output: Yes
Explanation: There are two trees both
having 3 nodes and 2 edges, both trees
are identical having the root as 1,
left child of 1 is 2 and right child
of 1 is 3.


https://practice.geeksforgeeks.org/problems/determine-if-two-trees-are-identical/1/?track=P100-Tree&batchId=197#


*************************************************************************************************************************************************************

bool isIdentical(Node *r1, Node *r2)
    {
        // If either of r1 or r2 becomes null while other is not null, return false
        if(r1 && !r2 || r2 && !r1)
        {
            return false;
        }
        
        // condition when both are not null
        if(r1 && r2)
        {
            // Inorder Traversal 
            return isIdentical(r1->left,r2->left) && r1->data== r2->data && isIdentical(r1->right,r2->right);
        }
    }


*************************************************************************************************************************************************************